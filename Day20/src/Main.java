import java.util.Arrays;

public class Main {

    public static void main(String[] args) {
//        byte[] data =  "学习".getBytes();
//        System.out.println(Arrays.toString(data));//[-27, -83, -90, -28, -71, -96]

    }
}


/** 文件的字节流
 * FileInputStream
 * FileOutputStream
 *
 * 使用字节流操作汉字或者特殊的符号语言的时候，容易乱码，建议使用字符流
 * 先有字节流，后又字符流，字符流是对字节流的补充
 *
 * 一般的，操作二进制文件(图片音视频等)必须使用字节流
 * 一般的，操作文本文件，使用字符流
 * 如果不清楚是哪一个类型的文件，使用字节流
 *
 * 文件的字符流
 * FileReader:
 * FileWriter:
 */


/** 字符编码的发展历程:
 * 计算机只认识数字，我们在计算机里的一切数据都是以数字来表示，因为英文符号有限
 * 所有规定使用的字节的最高位是0，每一个字符都是以0~127之间的数字来表示，比如A对应64,a对应97
 * 这就是美国标准信息交换码 ASCII
 *
 * 随着计算机在全球的普及，很多国家和地区都把自己的字符引入了计算机，比如汉字
 * 此时发现一个字节能表示的数字范围太小，不能包含所有的中文汉字，那么就规定使用两个字节来表示一个汉字
 * 规定：原有的ASCII字符的编码保持不变，仍然使用一个字节表示，为了区别一个中文字符与两个ASCII码字符
 * 中文字符的每个字节最高位规定是1(中文的二进制是负数)，这个规范就是GB2312编码
 * 后来在GB2312的基础上增加了更多的中文字符，也就出现了GBK
 *
 * 新的问题，在中国是认识汉字的，但是如果把汉字传递给其他国家，该国家的码表中没有收录汉字，其实显示另一个符号或者乱码
 *
 * 为了解决各个国家因为本地化字符编码带来的影响，咱们就把全世界所有的符号统一进行编码-Unicode编码
 * 此时某一个字符在全世界任何地方都是固定的
 * Unicode的编码都占有2个字节的大小
 *
 */


/** 常见的字符集
 * ASCII:占一个字节，只能包含128个符号，不能表示汉字
 * ANSI 占两个字节，在简体中文的操作系统中，ANSI就指的是GB2312
 * UTF-8 是一种针对Unicode的可变长度字符编码，又称万国码，是Unicode的实现方式之一
 * 编码中的第一个字节仍与ASCII兼容，这使得原来处理ASCII字符的权健无需或只需做少部分修改，即可继续使用
 * 现在是优先采用的编码
 *
 * 存储字母，数字和汉字
 * 存储字母和数字无论是什么字符集都占1个字节
 * 存储汉字 GBK家族占两个字节，UTF-8家族占3个字节
 *
 *
 * UTF-8 BOM是微软搞出的编码，默认占用3个字节
 *
 *
 * 不能使用单字节的字符集（ASCII）来存储中文
 */

